"""
Template settings for django project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

"""
Template built by Lawrence Ouyang (lawrence.ouyang@flysfo.com)
PYTHON VERSION: 3.6.1
DJANGO VERSION: 1.11
CREATE-REACT-APP VERSION: 1.3.0

NOTE: To rename this project correctly, change the name of the folder, and in manage.py and wsgi.py,
      change the settings 'PROJECT_NAME' to the name of your application
      
      To rename the application, change the name of the app folder, change the name under 'INSTALLED_APPS', and
      change the name under the package.json inside the directory
"""

import os

PROJECT_NAME = 'gate_allocation_wa'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#REDACTED'

########################################################################################################################
#                                                    VERSION                                                           #
########################################################################################################################
BUILD_ENV = os.environ.get('ENV', 'LOCAL')
BUILD_NUMBER = os.environ.get('BUILD_NUMBER', 0)  # Jenkins Build Number
RELEASE = '0'        # Each development milestone  QA/UAT
MINOR_VERSION = '0'  # +1 for every time we go public"
MAJOR_VERSION = '0'  # Significant change. Business Approval Required
VERSION = '{} {}.{}.{}.{}'.format(BUILD_ENV, MAJOR_VERSION, MINOR_VERSION, RELEASE, BUILD_NUMBER)


########################################################################################################################
#                                                    LOGGING                                                           #
########################################################################################################################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(funcName)s %(name)s %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'default': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': False,
        },
        'gate_allocation': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': False,
        },
        'Python_gate_allocation': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': False
        }
    },
}

########################################################################################################################
#                                                  BUILD ENVIRONMENTS                                                  #
########################################################################################################################
DEBUG = True
ALLOWED_HOSTS = ['*']

if BUILD_ENV == "LOCAL":
    SQLITE_DIR = BASE_DIR
else:
    # On servers, move sqlite to different directory to avoid clearing session on redeployment
    SQLITE_DIR = BASE_DIR + "/../../GateAllocationSQLite/"
    # On servers, move logging to output to file
    LOGGING["handlers"]["default"]["class"] = 'logging.FileHandler'
    log_file_name = 'DISPLAY_{}_{}_{}_{}_{}'.format(BUILD_ENV, MAJOR_VERSION, MINOR_VERSION, RELEASE, BUILD_NUMBER)
    LOGGING["handlers"]["default"]["filename"] = '#REDACTED'

    if BUILD_ENV != "DEV":
        DEBUG = False
        SESSION_EXPIRE_AT_BROWSER_CLOSE = True
        SESSION_SAVE_EVERY_REQUEST = True
        SESSION_COOKIE_AGE = 30 * 60


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gate_allocation'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '{}.urls'.format(PROJECT_NAME)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'gate_allocation.context_processors.version_number'
            ],
        },
    },
]

WSGI_APPLICATION = '{}.wsgi.application'.format(PROJECT_NAME)

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Pacific'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/gate_allocation/'

AD_WS_URL = '#REDACTED' # AD Web Service
